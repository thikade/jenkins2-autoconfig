- name: Main Playbook to setup a boilerplate Openshift project structure
  hosts: localhost
  become: no
  gather_facts: no

  vars:
    NEW_PROJECT: "ansible-testing"
    PROJECT_NODE_SELECTOR: "color=blue" 
    VARS_FILE : "variables.json"
  # vars_files:
  #   - variables.json

  tasks:

  - name: Load project setup variables from file 
    include_vars: 
        file: "{{ VARS_FILE }}"
        name: stiu

  # These ENV vars are set by Jenkins job and are required by Ansible plays.  
  #
  # OC_CMD = "oc --server=https://... --token=abc --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  # OC_AUTH = "--token=abc --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  # OC_SERVICEACCOUNT_NAME = jenkins 
  # AUTH_TOKEN=/run/secrets/kubernetes.io/serviceaccount/token
  # OPENSHIFT_API_URL=https://openshift.default.svc.cluster.local
  # JENKINS_NAMESPACE=namespace
  
  - name: Get Jenkins ENV vars
    set_fact: 
      OC_CMD="{{ lookup('env','oc_cmd') }}" 
      OC_AUTH="{{ lookup('env','oc_auth') }}" 
      OC_SERVICEACCOUNT_NAME="{{ lookup('env','oc_serviceaccount_name') }}" 
      OC_AUTH_TOKEN="{{ lookup('env','AUTH_TOKEN') }}" 
      OPENSHIFT_API_URL="{{ lookup('env','OPENSHIFT_API_URL') }}" 
      JENKINS_NAMESPACE="{{ lookup('env','OPENSHIFT_BUILD_NAMESPACE') }}" 
      JENKINS_URL="{{ lookup('env','JENKINS_URL') }}" 
      JENKINS_JOB_BASE_NAME="{{ lookup('env','JOB_BASE_NAME') }}" 
      JOB_URL="{{ lookup('env','JOB_URL') }}" 
      WORKSPACE="{{ lookup('env','WORKSPACE') }}" 

  - name: debug - print all vars
    vars: 
      msg: |
        Environment Variables ("environment"):
        --------------------------------
        TEST: {{ lookup('env','TEST')}}
        {{ environment | to_nice_yaml(indent=2, width=160) }} 

        Module Variables ("vars"):
        --------------------------------
        {{ vars | to_nice_yaml(indent=2, width=160) }}   
        
        GROUP NAMES Variables ("group_names"):
        --------------------------------
        {{ group_names | to_nice_yaml(indent=2, width=160) }}
        
        GROUPS Variables ("groups"):
        --------------------------------
        {{ groups | to_nice_yaml(indent=2, width=160) }}
        
        HOST Variables ("hostvars"):
        --------------------------------
        {{ hostvars | to_nice_yaml(indent=2, width=160) }} 
    debug: msg="{{ msg.split('\n') }}" verbosity=1
  

  - name: Ensure at least one project is in the list.
    fail:
      msg: "ERROR: Please supply one or more projects to setup."
    when: stiu.stages | default([]) == []


  - name: Check required top-level setup variables 
    fail:
      msg: "Variable {{ item }} is not defined!"  
    when: 'stiu[item] is undefined'
    loop_control:
      label: "checking var: {{ item }}"       
    loop:
      - 'repository'
      - 'jenkins_stage'
      - 'cluster_authentication'


  - name: Set global facts
    set_fact:
      repository:           "{{ stiu.repository }}"
      annotations:          "{{ stiu.project_annotations | default({}) }}"
      labels:               "{{ stiu.project_labels | default({}) }}"
      cluster_auth:         "{{ stiu.cluster_authentication | default({}) }}"
      jenkins_stage:        "{{ stiu.jenkins_stage }}"
      jenkins_namespace:    "{{ stiu[stiu.jenkins_stage]['namespace'] }}"    
      stages_without_jenkins: "{{ stiu.stages | reject('search', jenkins_stage) | list }}"    



  - name: Create Projects
    include_tasks: 010-create-projects.yaml
    loop: "{{ stiu.stages }}"
    loop_control:
      loop_var: outer_item 


  - name: Setup Jenkins
    include_tasks: 015-setup-Jenkins.yaml
    loop: 
      - "{{ stiu.jenkins_stage }}"
    loop_control:
      loop_var: outer_item 

  
  - name: Assign RBAC permissions to projects
    include_tasks: 020-assign-RBACs.yaml
    loop: "{{ stiu.stages }}"
    loop_control:
      loop_var: outer_item 